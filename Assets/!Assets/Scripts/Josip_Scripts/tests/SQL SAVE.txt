using UnityEngine;
using System.Data;
using Mono.Data.Sqlite;
using System.Collections.Generic;


public class SQLManipulator : MonoBehaviour
{
    private string conn;
    private string sqlQuery;

    IDbConnection dbconn;
    IDbCommand dbcmd;

    public static List<Note> ListOfNotes;

    private void Awake()
    {
        ListOfNotes = new List<Note>();
    }

    // Use this for initialization
    void Start()
    {
        // put do baze podataka
        conn = "URI=file:" + Application.dataPath + "/SQL/Users.s3db";

        // tests
        //Deletvalue(6);
        //readers();

    }

    public void insertvalue(string username, string content, int pinID, int fontID)
    {
        using (dbconn = new SqliteConnection(conn))
        {
            dbconn.Open();
            dbcmd = dbconn.CreateCommand();
            sqlQuery = string.Format("insert into Notes (Username, Content, PinID, FontID) values (\"{0}\",\"{1}\",\"{2}\",\"{3}\")", username, content, pinID, fontID);
            dbcmd.CommandText = sqlQuery;
            dbcmd.ExecuteScalar();
            dbconn.Close();

        }
    }
    public void Deletvalue(int id)
    {
        using (dbconn = new SqliteConnection(conn))
        {
            dbconn.Open();
            dbcmd = dbconn.CreateCommand();
            sqlQuery = string.Format("Delete from Notes WHERE ID=\"{0}\"", id);
            dbcmd.CommandText = sqlQuery;
            dbcmd.ExecuteScalar();
            dbconn.Close();
        }
    }

    public void readers()
    {
        using (dbconn = new SqliteConnection(conn))
        {
            dbconn.Open();
            dbcmd = dbconn.CreateCommand();
            sqlQuery = "SELECT * " + "FROM Notes";
            dbcmd.CommandText = sqlQuery;
            IDataReader reader = dbcmd.ExecuteReader();
            while (reader.Read())
            {
                int id = reader.GetInt32(0);
                string username = reader.GetString(1);
                string content = reader.GetString(2);
                int pinID = reader.GetInt32(3);
                int fontID = reader.GetInt32(4);


                string.Format("insert into Notes (Username, Content, PinID, FontID) values (\"{0}\",\"{1}\",\"{2}\",\"{3}\")", username, content, pinID, fontID);
                
                //Debug.Log("value= " + id + "  username =" + username + "  content =" + content + "   pinID =" + pinID + "   fontID =" + fontID);
            }

            reader.Close();
            reader = null;
            dbcmd.Dispose();
            dbcmd = null;
            dbconn.Close();
            dbconn = null;

        }
    }

    // HELPERS

    



    //private void Updatevalue(string name, string email, string address, int id)
    //{
    //    using (dbconn = new SqliteConnection(conn))
    //    {

    //        dbconn.Open(); //Open connection to the database.
    //        dbcmd = dbconn.CreateCommand();
    //        sqlQuery = string.Format("UPDATE Usersinfo set Name=\"{0}\", Email=\"{1}\", Address=\"{2}\" WHERE ID=\"{3}\" ", name, email, address, id);// table name
    //        dbcmd.CommandText = sqlQuery;
    //        dbcmd.ExecuteScalar();
    //        dbconn.Close();
    //    }
    //}
}
